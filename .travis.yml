os: windows
language: shell

stages:
  - name: test
  - name: deploy
    if: type = push AND fork = false AND env(nuget_key) IS present

jobs:
  include: 
  - stage: test
    os: linux
    dist: bionic
    language: csharp
    mono: none
    dotnet: 3.1.201
    name: "Unit Tests"
    before_script:
      - dotnet nuget add source https://api.nuget.org/v3/index.json -n nuget.org
      - dotnet restore
      - dotnet build -c Release
    script: dotnet test
    if: fork = false AND env(steam) IS present
    
  - name: "Code Quality"
    before_script:
      - choco install visualstudio2019-workload-netcorebuildtools
      - powershell Set-ExecutionPolicy -ExecutionPolicy Unrestricted -Force
      - dotnet nuget add source https://api.nuget.org/v3/index.json -n nuget.org
      - dotnet restore
      - dotnet build -c Release
    script:
      - powershell Invoke-WebRequest -Uri "https://github.com/dragonfruitnetwork/CodeCutter/releases/latest/download/DragonFruit.CodeCutter.exe" -OutFile ".\DragonFruit.CodeCutter.exe"
      - powershell ".\DragonFruit.CodeCutter.exe"
      
  - stage: deploy
    name: "Beta"
    before_script:
      - choco install visualstudio2019-workload-netcorebuildtools
      - powershell Set-ExecutionPolicy -ExecutionPolicy Unrestricted -Force
      - dotnet nuget add source https://api.nuget.org/v3/index.json -n nuget.org
      - dotnet restore
      - dotnet build -c Release
    script: powershell -File Nuget.ps1 -Suffix "-beta"
    if: branch = master
    
  - name: "Production"
    before_script:
      - choco install visualstudio2019-workload-netcorebuildtools
      - powershell Set-ExecutionPolicy -ExecutionPolicy Unrestricted -Force
      - dotnet nuget add source https://api.nuget.org/v3/index.json -n nuget.org
      - dotnet restore
      - dotnet build -c Release
    script: powershell -File Nuget.ps1
    if: branch = master AND tag IS present